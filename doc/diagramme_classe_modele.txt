@startuml

enum Visibility {
    PRIVATE
    PROTECTED
    PUBLIC
}

enum Modifier {
    FINAL
    STATIC
    ABSTRACT
    VOLATILE
    TRANSIENT
    SYNCHRONIZED
    
    getFullName() : String
}

class UmlDiagram {
    -String titre
    +getTitre()
    +setTitre(String titre)
}

interface UmlElement {
}


Abstract class UmlEntity {
    +addModifier(m : Modifier)
    +clearModifiers()
    +removeModifier(m : Modifier)
    +getVisibility()
    +setVisibility()
}

Abstract class UmlLabeled_Element {
    -String label
    +getLabel()
    +setLabel(String label)
}

class UmlClass {
}

class UmlMethod {
    -params
    -return
}

class UmlAttribute {
    -String valeur
    +getType() : UmlComponent
    +toString() : String
}


class UmlEnum {
    -String valeur
}

class UmlPackage {
    
}

class UmlInterface {

}

Abstract class UmlComponent {
    +addMethod(UmlMethod method) {abstract}
    +addAttribute(UmlAttribute attr) {abstract}

}


Interface UmlRelationship {
    +getRelationType() : Relationship_Type
}

Enum Relationship_Type{
    AGGREGATION
    COMPOSITION
    IMPLEMENTS
    EXTENDS
    USE
    DEPENDS
}

UmlDiagram "1" *- "*" UmlElement
UmlDiagram "1" *- "*" UmlRelationship
UmlRelationship "*" o-- "2..*" UmlElement

UmlElement <|.. UmlLabeled_Element
UmlLabeled_Element <|-- UmlEntity


UmlComponent <|-- UmlClass
UmlComponent <|-- UmlInterface
UmlComponent <|-- UmlEnum

UmlEntity <|-- UmlComponent

UmlEntity <|-- UmlMethod
UmlEntity <|-- UmlAttribute

UmlLabeled_Element <|-- UmlPackage
UmlLabeled_Element "*" <- "1" UmlPackage

UmlEntity  -> "visibility" Visibility
Modifier "modifier" <- UmlEntity

UmlComponent "1" *-- "*" UmlMethod
UmlComponent "1" *-- "*" UmlAttribute
 

UmlHierachyLink -[hidden]-> UmlUsageLink

UmlRelationship <|. UmlHierachyLink
UmlRelationship <|. UmlUsageLink

UmlHierachyLink -> Relationship_Type
UmlUsageLink -> Relationship_Type

@enduml
