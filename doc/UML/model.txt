@startuml

title UML7 - model

together {
class UmlEntity
class Visibility
class Modifier
class UmlRefType
class UmlClass
class UmlEnum
class UmlInterface
}

together {
class UmlAggregationLink
class UmlAssociationLink
class UmlCompositionLink
class UmlExtendLink
}

enum Visibility {
    - symbol : String
    - name : String
    PRIVATE
    PROTECTED
    PUBLIC
    PACKAGE
    --
    + toString() : String
}

enum Modifier {
    - name : String
    FINAL
    STATIC
    ABSTRACT
    VOLATILE
    TRANSIENT
    SYNCHRONIZED
    --
    + toString() : String
    --
    + Modifier(name : String)
}

class UmlDiagram {
    - serialVersionUID : long {final} {static}
    - titre : String
    - elements : List<UmlRefType>
    - relations : List<UmlRelationship>
    --
    + getTitle()
    + setTitle(title : String)
    + getUmlElements() : List<UmlRefType>
    + addUmlElements(element : UmlRefType) : void
    + addAllUmlElements(elements : List<UmlRefType>) : void
    + getUmlRelations() : List<UmlRelationship>
    + addUmlRelations(relation : UmlRelationship) : void
    + addAllUmlRelations(relations : List<UmlRelationship>) : void
    + removeUmlElement(reftype : UmlRefType) : void
    + equals(o : Object) : boolean
    --
    + UmlDiagram()
    + UmlDiagram(title : String)
    + UmlDiagram(title : String, elements : List<UmlRefType>)
    + UmlDiagram(title : String ; elements : List<UmlRefType> ; relations : List<UmlRelationship>)
}

interface UmlType {
    --
    + getTypeName() : String
    --
}

class UmlParams {
    - serialVersionUID : long {final} {static}
    - type : UmlType
    - name : String
    --
    + getType() : UmlType
    + setType() : void
    + getName() : String
    + setName() : void
    + equals(o : Object) : void
    --
    + UmlParams(type : UmlType ; name : String)
    
}

enum PrimitiveType {
    - name : String
    INT
    DOUBLE
    FLOAT
    BYTE
    CHAR
    STRING
    SHORT
    LONG
    BOOLEAN
    VOIDa
    --
    + toString() : String
    + getTypeName() : String
    --
    + PrimitiveType(name : String)
}


Abstract class UmlEntity {
    - serialVersionUID : long {static}{final}
    - name : String
    - visibility : Visibility
    - modifiers : Set<Modifier>
    --
    + getName() : String
    + setName(name : String) : void
    + addModifier(modifier : Modifier) : void
    + clearModifiers() : void
    + removeModifier(modifier : Modifier) : void
    + getVisibility() : Visibility
    + setVisibility(visibility : Visibility) : void
    + getModifiers() : Set<Modifier>
    + setModifiers(modifiers : Set<Modifier>) : void
    # checkVisibility(visibility : Visibility) : void
    # checkModifier(modifier : Modifier) : void
    # checkModifiers(modifiers : Set<Modifier>) : void
    # setChangedAndNotify() : void
    --
    + UmlEntity(name : String)
    + UmlEntity(name : String ; visibility : Visibility)
    + UmlEntity(name : String ; modifiers : Set<Modifier>)
    + UmlEntity(name : String ; visibility : Visibility ; modifier : Set<Modifier>)
}

class UmlClass {
    - serialVersionUID : long {static}{final}
    --
    + accept(visitor : DiagramElementVisitor) : void
    + equals(Object : o) : boolean
    # checkAttribute(attribute : UmlAttribute) : void
    # checkAttributes(attributes : List<UmlAttribute>) : void
    # checkMethod(method : UmlMethod) : void
    # checkMethods(methods : List<UmlMethod>) : void
    # checkVisibility(visibility : Visibility) : void
    # checkModifier(modifier : Modifier) : void
    # checkModifiers(modifiers : Set<Modifier>) : void
    --
    + UmlClass(name : String)
    + UmlClass(name : String ; methods : List<UmlMethod>)
    + UmlClass(name : String ; methods : List<UmlMethod> ; attributes : List<UmlAttribute>)
    + UmlClass(name : String ; methods : List<UmlMethod> ; attributes : List<UmlAttribute> ; visibility Visibility ; modifiers : Set<Modifier>)
}

class UmlMethod {
    - serialVersionUID : long {final} {static}
    - params : Set<UmlParams>
    - returnType : UmlType
    --
    + addParam(param : UmlParams) : void
    + addParams(params : Set<UmlParams>) : void
    + removeParam(param : UmlParams) : void
    + removeParams(params : Set<UmlParams>) : void
    + getReturnType() : UmlType
    + setReturnType(returnType : UmlType) : void
    + getParams() : Set<UmlParams>
    # checkVisibility(visibility : Visibility) : void
    # checkModifier(modifier : Modifier) : void
    # checkModifiers(modifiers : Set<Modifier>) : void
    --
    + UmlMethod(name : String)
    + UmlMethod(name : String ; params : Set<UmlParams> ; returnType : UmlType ; visibility : Visibility ; modifiers : Set<Modifier>)
}

class UmlAttribute {
    - type : UmlType
    --
    + getType() : UmlType
    + setType(attrType : UmlType) : void
    + equals(o : Object) : boolean
    # checkVisibility(visibility : Visibility) : void
    # checkModifier(modifier : Modifier) : void
    # checkModifiers(modifiers : Set<Modifier>) : void
    --
    + UmlAttribute(attrName : String ; attrType : UmlType)
    + UmlAttribute(attrName : String ; attrType : UmlType ; attrVisi : Visibility ; attrModifs : Set<Modifier>)
}


class UmlEnum {
    - serialVersionUID : long {final} {static}
    - valuesList : List<String>
    --
    + getValuesList() : List<String>
    + setValuesList(valuesList : List<String>) : void
    + addValue(value : String) : void
    + removeValue(value : String) : void
    + accept(visitor : DiagramElementVisitor) : void
    + equals(o : Object) : boolean
    # checkAttribute(attribute : UmlAttribute) : void
    # checkAttributes(attributes : List<UmlAttribute>) : void
    # checkMethod(method : UmlMethod) : void
    # checkMethods(methods : List<UmlMethod>) : void
    # checkVisibility(visibility : Visibility) : void
    # checkModifier(modifier : Modifier) : void
    # checkModifiers(modifiers : Set<Modifier>) : void
    --
    + UmlEnum(name : String) 
    + UmlEnum(name : String ; values : List<String>)
    + UmlEnum(name : String ; values : List<String> ; methods : List<UmlMethod>)
    + UmlEnum(name : String ; values : List<String> ; methods : List<UmlMethod> ; attributes : List<UmlAttribute>)
    + UmlEnum(name : String ; values : List<String> ; methods : List<UmlMethod> ; attributes : List<UmlAttribute> ; visibility : Visibility)
}

Abstract class UmlRefType {
    - serialVersionUID : long {final} {static}
    - methodsList : List<UmlMethod>
    - attributesList : List<UmlAttribute>
    --
    + getMethodsList() : List<UmlMethod>
    + setMethodsList(methodsList : List<UmlMethod>) : void
    + getAttributesList() : List<UmlAttribute>
    + setAttributesList(attributesList : List<UmlAttribute>) : void
    + addMethod(method : UmlMethod) : void
    + addAttribute(attribute : UmlAttribute) : void
    + removeMethod(method : UmlMethod) : void
    + removeAttribute(attribute : UmlAttribute) : void
    + getTypeName() : String
    + {abstract} accept(visitor : DiagramElementVisitor) : void
    + equals(o : Object) : boolean
    # checkAttribute(attribute : UmlAttribute) : void
    # checkAttributes(attributes : List<UmlAttribute>) : void
    # checkMethod(method : UmlMethod) : void
    # checkMethods(methods : List<UmlMethod>) : void
    --
    + UmlRefType(name : String)
    + UmlRefType(name : String ; methods : List<UmlMethod>)
    + UmlRefType(name : String ; methods : List<UmlMethod> ; attributes : List<UmlAttribute>)
    + UmlRefType(name : String ; methods : List<UmlMethod> ; attributes : List<UmlAttribute> ; visibility : Visibility)
    + UmlRefType(name : String ; methods : List<UmlMethod> ; attributes : List<UmlAttribute> ; visibility : Visibility ; modifiers : Set<Modifier>)
}

Abstract class UmlRelationship {
    - classA : UmlClass
    - classB : UmlClass
    - roleA : String
    - roleB : String
    - cardinalityA : int
    - cardinalityB : int
    - relationName : String
    --
    + getRoleA() : String
    + setRoleA(roleA : String) : void
    + getRoleB() : String
    + setRoleB(roleB : String) : void
    + setCardinalityA(value : int) : void
    + setCardinalityB(value : int) : void
    + getClassA() : UmlClass
    + getClassB() : UmlClass
    + getCardinalityA() : int
    + getCardinalityB() : int
    + getRelationName() : String
    + setRelationName(relationName : String) : void
    + equals(o : Object) : boolean
    --
    # UmlRelationship(elementA : UmlClass ; elementB : UmlClass)
}

class UmlAggregationLink{
    -serialVersionUID : long {final} {static}
    +UmlAggregationLink(theClassA : UmlClass, theClassB :UmlClass)
    +equals(o : Object) : boolean
}

class UmlAssociationLink{
    -serialVersionUID : long {final} {static}
    +UmlAssociationLink(theClassA : UmlClass, theClassB :UmlClass)
    +equals(o : Object) : boolean
}
class UmlCompositionLink{
    -serialVersionUID : long {final} {static}
    +UmlCompositionLink(theClassA : UmlClass, theClassB :UmlClass)
    +equals(o : Object) : boolean
}
class UmlExtendLink{
    -serialVersionUID : long {final} {static}
    +UmlExtendLink(theClassA : UmlClass, theClassB :UmlClass)
    +equals(o : Object) : boolean
}

class UmlInterface {
    --
    - serialVersionUID : long {final} {static}
    --
    + accept(visitor : DiagramElementVisitor) : void
    + equals(o : Object) : boolean
    # checkAttribute(attribute : UmlAttribute) : void
    # checkAttributes(attributes : List<UmlAttribute>) : void
    # checkMethod(method : UmlMethod) : void
    # checkMethods(methods : List<UmlMethod>) : void
    # checkVisibility(visibility : Visibility) : void
    # checkModifier(modifier : Modifier) : void
    # checkModifiers(modifiers : Set<Modifier>) : void
    --
    + UmlInterface(name : String)
    + UmlInterface(name : String, methods : List<UmlMethod>)
    + UmlInterface(name : String, methods : List<UmlMethod>, attributes : List<UmlAttribute>)
    + UmlInterface(name : String, methods : List<UmlMethod>, attributes : List<UmlAttribute>, visibility : Visibility, modifiers : Set<Modifier>)
}

UmlEntity -down-> Visibility
UmlEntity -down-> Modifier
UmlRefType -up-|> UmlEntity
UmlClass -up-|> UmlRefType
UmlEnum -up-|> UmlRefType
UmlInterface -up-|> UmlRefType
UmlDiagram *-right- UmlEntity
UmlDiagram *-right- UmlRelationship
UmlParams --* UmlMethod
PrimitiveType ..|> UmlType
UmlMethod --|> UmlEntity
UmlMethod -up-* UmlRefType
UmlAttribute --|> UmlEntity
UmlAttribute -up-* UmlRefType
UmlAggregationLink -up|> UmlRelationship
UmlAssociationLink -up|> UmlRelationship
UmlCompositionLink -up|> UmlRelationship
UmlExtendLink -up-|> UmlRelationship
UmlAttribute *-- UmlType
UmlMethod *-up- UmlType
UmlParams *-- UmlType

Observable <|-- UmlDiagram
Observable <|-- UmlEntity
Serializable <|.. UmlDiagram
Serializable <|.. UmlEntity
Serializable <|.. UmlParams
Serializable <|.. UmlRelationship

@enduml
