@startuml

class Generator.FContent {
    -String nom;
    -String contenu;
    +getContenu() : String
    +setContenu(String contenu);
}

Interface Generator.CodeGenerator {
    +generateCode(UmlDiagram, Boolean strict) : FContent[]
    +generateCode(folder : File, UML_Diagram) : void
    +generateCode(Classe) : FContent[]
    +generateCode(Interface) : FContent[]
    +generateCode(Enum) : FContent[]
}

Interface Generator.DiagramGenerator {
    +generateDiagram(FContent[])
}

namespace Generator #FFFFFF { 
    namespace JavaGenerator #DDDDDD { 
        
    }   
}

class Generator.JavaGenerator.JavaGenerator {
    -generateObject(Type : String, UmlComponent)
}

class InvalidDiagramException << (E,red) >> {

}

class IncompleteDiagramException << (E,red) >> {

}

class InvalidElementException << (E,red) >> {

}

class InvalidDiagramInputFileException << (E,red) >> {

}

Generator.CodeGenerator <|-- Generator.JavaGenerator.JavaGenerator
Generator.DiagramGenerator <|-- Generator.JavaGenerator.JavaGenerator

Generator.FContent <- Generator.DiagramGenerator
InvalidDiagramInputFileException <- Generator.DiagramGenerator
Generator.FContent "*" <- "*" Generator.CodeGenerator
InvalidDiagramException <- Generator.CodeGenerator
InvalidElementException <- Generator.CodeGenerator
IncompleteDiagramException <- Generator.CodeGenerator

@enduml
